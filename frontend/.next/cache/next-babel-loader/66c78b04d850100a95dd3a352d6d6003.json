{"ast":null,"code":"var _jsxFileName = \"/Users/patientplatypus/Documents/platypusNEST/example_portfolio_project/frontend/pages/statemanagement.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport react, { Component } from 'react';\nimport styles from '../styles/molecules/main.module.css';\nimport Sidebar from '../components/molecules/Sidebar';\nimport ContentStateManagement from '../components/molecules/ContentStateManagement';\nimport Footer from '../components/molecules/Footer';\nimport withRedux from \"next-redux-wrapper\"; // import makeStore from '../components/redux/reduxComponent';\n\nimport { connect } from 'react-redux';\n\nclass StateManagement extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      props.getPosts();\n    });\n  }\n\n  // getInitialProps({store, isServer, pathname, query}){\n  //   // component will read from store's state when rendered\n  //   store.dispatch({type: 'FOO', payload: 'foo'});\n  //   // pass some custom props to component from here\n  //   return {custom: 'custom'}; \n  // };\n  static async getInitialProps({\n    store,\n    isServer,\n    pathname,\n    query\n  }) {\n    // component will be able to read from store's state when rendered\n    // store.dispatch({ type: 'FOO', payload: 'foo' });\n    // you can pass some custom props to component from here\n    await store.dispatch(getPosts());\n    return {\n      custom: 'custom'\n    };\n  }\n\n  componentDidMount() {\n    console.log('inside componentDidMount of State Management Page');\n    console.log('value of this.props: ', this.props);\n    console.log('value of this.props.foo: ', this.props.foo);\n    console.log('value of this.props.custom: ', this.props.custom);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"height100Width100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: styles.gridContainerMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: styles.gridSidebarMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: styles.gridContentMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(ContentStateManagement, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: styles.gridFooterMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))));\n  }\n\n} // StateManagement = withRedux(makeStore, (state) => (\n//   {foo: state.foo}\n// ))(StateManagement);\n\n\nexport default connect(state => state, {\n  getPosts\n})(StateManagement); // export default StateManagement;","map":{"version":3,"sources":["/Users/patientplatypus/Documents/platypusNEST/example_portfolio_project/frontend/pages/statemanagement.js"],"names":["react","Component","styles","Sidebar","ContentStateManagement","Footer","withRedux","connect","StateManagement","e","preventDefault","props","getPosts","getInitialProps","store","isServer","pathname","query","dispatch","custom","componentDidMount","console","log","foo","render","gridContainerMain","gridSidebarMain","gridContentMain","gridFooterMain","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AAEA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,sBAAP,MAAmC,gDAAnC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAN,SAA8BP,SAA9B,CAAuC;AAAA;AAAA;;AAAA,0CAiBtBQ,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,KAAK,CAACC,QAAN;AACD,KApBoC;AAAA;;AAErC;AACA;AACA;AACA;AACA;AACA;AAEA,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,GAA7B,EAAmE;AACjE;AACA;AACA;AACA,UAAMH,KAAK,CAACI,QAAN,CAAeN,QAAQ,EAAvB,CAAN;AACA,WAAO;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD;;AAODC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,KAAKX,KAA1C;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC,KAAKX,KAAL,CAAWY,GAApD;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C,KAAKX,KAAL,CAAWQ,MAAvD;AACD;;AAEDK,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEtB,MAAM,CAACuB,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACwB,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAExB,MAAM,CAACyB,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAOE;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CADF,CADF;AAeD;;AA7CoC,C,CAgDvC;AACA;AACA;;;AAEA,eAAerB,OAAO,CACpBsB,KAAK,IAAIA,KADW,EAEpB;AAAEjB,EAAAA;AAAF,CAFoB,CAAP,CAGbJ,eAHa,CAAf,C,CAMA","sourcesContent":["import react, {Component} from 'react';\nimport styles from '../styles/molecules/main.module.css';\n\nimport Sidebar from '../components/molecules/Sidebar';\nimport ContentStateManagement from '../components/molecules/ContentStateManagement';\nimport Footer from '../components/molecules/Footer';\nimport withRedux from \"next-redux-wrapper\";\n// import makeStore from '../components/redux/reduxComponent';\nimport { connect } from 'react-redux';\n\nclass StateManagement extends Component{\n\n  // getInitialProps({store, isServer, pathname, query}){\n  //   // component will read from store's state when rendered\n  //   store.dispatch({type: 'FOO', payload: 'foo'});\n  //   // pass some custom props to component from here\n  //   return {custom: 'custom'}; \n  // };\n\n  static async getInitialProps({ store, isServer, pathname, query }) {\n    // component will be able to read from store's state when rendered\n    // store.dispatch({ type: 'FOO', payload: 'foo' });\n    // you can pass some custom props to component from here\n    await store.dispatch(getPosts());\n    return { custom: 'custom' };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    props.getPosts();\n  };\n\n  componentDidMount(){\n    console.log('inside componentDidMount of State Management Page')\n    console.log('value of this.props: ', this.props)\n    console.log('value of this.props.foo: ', this.props.foo);\n    console.log('value of this.props.custom: ', this.props.custom);\n  }\n\n  render(){\n    return(\n      <div className='height100Width100'>\n        <div className={styles.gridContainerMain}>\n          <div className={styles.gridSidebarMain}>\n            <Sidebar/>\n          </div>\n          <div className={styles.gridContentMain}>\n            <ContentStateManagement/>\n          </div>\n          <div className={styles.gridFooterMain}>\n            <Footer/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// StateManagement = withRedux(makeStore, (state) => (\n//   {foo: state.foo}\n// ))(StateManagement);\n\nexport default connect(\n  state => state,\n  { getPosts }\n)(StateManagement);\n\n\n// export default StateManagement;"]},"metadata":{},"sourceType":"module"}